"""
Django settings for funread_backend project.

Generated by 'django-admin startproject' using Django 3.1.7.

For more information on this file, see
https://docs.djangoproject.com/en/3.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.1/ref/settings/
"""

from pathlib import Path
import os
from dotenv import load_dotenv
from datetime import timedelta
# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent
load_dotenv()

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = os.environ.get("SETTINGS_SECRET_KEY")

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = [os.environ.get("SETTINGS_ALLOWED_HOSTS")]


# Application definition
INSTALLED_APPS = [
    'corsheaders',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'rest_framework',
    'rest_framework_simplejwt',
    'Users',
    'Books',
    'Pages',
    'Widget',
    'folder',
    'Tags',
    'Files',
    'Mailer',
    'Roles',
    'Author',
    'Sharedbooks',
    'Grades',
    'Institute',
    'BooksPerClasses',
    'GroupsPerClasses',
    'StudentsGroups',
    'TagsPerPage',
    'Classes',
    'ClassesLog',
    'TeacherApp',
    'Media',
    'GroupsCreate',
    'Options',
    "Joins",
    "Userroles",
    "BooksDilemma",
    "TranslateApp",
    'Subtitled',
    'Badges',
    'UserPointsLog',
    'TeamUser',
    'Team',
    'UserBadge',
    'UserPoints',
    'AvatarCreator',
    'BookCover',
    'userbookprogress',
    'bookbadge',
]


SIMPLE_JWT = {
    'ACCESS_TOKEN_LIFETIME': timedelta(minutes=50),  # Duración del token de acceso (ejemplo: 1 hora)
    'ALGORITHM': 'HS256',  # Algoritmo de firma JWT
    'SIGNING_KEY': SECRET_KEY, #'funreadkeysecret',  # Clave secreta para firmar los tokens
    'VERIFYING_KEY': None,  # Clave pública para verificar tokens (puede dejarse en None)
    #'AUTH_HEADER_TYPES': ('Bearer'),  # Tipos de encabezado de autenticación (generalmente 'Bearer')
    'USER_ID_FIELD': 'useid',
    'USER_ID_CLAIM': 'user_id',
}
# REST_FRAMEWORK = {
#     'DEFAULT_AUTHENTICATION_CLASSES': [
#         'rest_framework.authentication.BasicAuthentication',
#         'rest_framework.authentication.SessionAuthentication',
#     ]
# }

#AUTH_USER_MODEL = "Users.User"


MIDDLEWARE = [
    "corsheaders.middleware.CorsMiddleware",
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'whitenoise.middleware.WhiteNoiseMiddleware'
]

# CORS_ALLOW_ALL_ORIGINS=True

# CORS_ORIGIN_ALLOW_ALL=True

CORS_ALLOWED_ORIGINS = [
    os.environ.get("SETTINGS_CORS_ALLOWED_HOSTS"),
]
CORS_ORIGIN_WHITELIST = [
    os.environ.get("EJEMSETTINGS_CORS_ALLOWED_HOSTSPLOA"),
]

CORS_ALLOW_METHODS = [
    "DELETE",
    "GET",
    "OPTIONS",
    "PATCH",
    "POST",
    "PUT",
]

CORS_ALLOW_HEADERS = [
    "accept",
    "accept-encoding",
    "authorization",
    "content-type",
    "dnt",
    "origin",
    "user-agent",
    "x-csrftoken",
    "x-requested-with",
    "Access-Control-Allow-Origin"
]

ROOT_URLCONF = 'funread_backend.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'funread_backend.wsgi.application'


# Database
# https://docs.djangoproject.com/en/3.1/ref/settings/#databases

DATABASES = {
    # 'default': {
    #     'ENGINE': 'djongo',
    #     'CLIENT': {
    #       'host': 'mongodb+srv://kim_jinhyuk:zW8tmyFtCBskKeOs@funread-cloud.7a4vx.mongodb.net/myFirstDatabase?retryWrites=true&w=majority',
    #       'name': 'funReadDB',
    #       'authMechanism': 'SCRAM-SHA-1' # for cloud db
    #     }
    # }
      'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': os.environ.get("SETTINGS_DATABASE_NAME"),
        'HOST': os.environ.get("SETTINGS_DATABASE_HOST"),
        "PASSWORD": os.environ.get("SETTINGS_DATABASE_PASSWORD"),
        'PORT': os.environ.get("SETTINGS_DATABASE_PORT"),
        'USER': os.environ.get("SETTINGS_DATABASE_USER"),
        'OPTIONS': {
            'init_command': "SET sql_mode='STRICT_TRANS_TABLES'"
        }
    }
}


# Password validation
# https://docs.djangoproject.com/en/3.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True

#AUTH_USER_MODEL = 'Users.User'
# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.1/howto/static-files/

STATIC_URL = '/api/static/'
STATIC_ROOT = os.path.join(BASE_DIR, 'static')

MEDIA_URL = '/api/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'Media', 'media')
